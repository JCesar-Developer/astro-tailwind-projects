---
type Color = 'white' | 'black' | 'gray';
type Wide = 'wide' | 'narrow';

interface Props {
  color?: Color;
  wide?: Wide;
}

const { 
  color = 'black',
  wide = 'narrow',
} = Astro.props
---
<button id="hamburger-btn" class:list={[
  "hamburger-btn flex flex-col gap-[5.5px] justify-center cursor-pointer",
  {
    '[&>span]:bg-black': color === 'black',
    '[&>span]:bg-white': color === 'white',
    '[&>span]:bg-gray-500': color === 'gray',
  }
]}>
  <span id="top" class:list={[
    'hamburgerLine',
    {
      'h-[3px] wide': wide === 'wide',
      'h-[2px] narrow': wide === 'narrow',
    }
  ]}></span>
  <span id="middle" class:list={[
    'hamburgerLine',
    {
      'h-[3px]': wide === 'wide',
      'h-[2px]': wide === 'narrow',
    }
  ]}></span>
  <span id="bottom" class:list={[
    'hamburgerLine',
    {
      'h-[3px] wide': wide === 'wide',
      'h-[2px] narrow': wide === 'narrow',
    }
  ]}></span>
</button>

<style>
.hamburgerLine {
  @apply w-6 rounded-full duration-200;
}
#hamburger-btn.active #top {
  transform: rotate(45deg) translate(5px, 6px);
}
#hamburger-btn.active #top.wide {
  transform: rotate(45deg) translate(5px, 7px);
}
#hamburger-btn.active #middle {
  opacity: 0;
}
#hamburger-btn.active #bottom {
  transform: rotate(-45deg) translate(5px, -5px);
}
#hamburger-btn.active #bottom.wide {
  transform: rotate(-45deg) translate(5px, -6.5px);
}
</style>